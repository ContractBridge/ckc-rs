struct BitCard;

#[allow(dead_code)]
#[rustfmt::skip]
impl BitCard {
    //region cards

    pub const ACE_SPADES:     u64 = 0b1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const KING_SPADES:    u64 = 0b0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const QUEEN_SPADES:   u64 = 0b0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const JACK_SPADES:    u64 = 0b0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const TEN_SPADES:     u64 = 0b0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const NINE_SPADES:    u64 = 0b0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const EIGHT_SPADES:   u64 = 0b0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const SEVEN_SPADES:   u64 = 0b0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const SIX_SPADES:     u64 = 0b0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const FIVE_SPADES:    u64 = 0b0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const FOUR_SPADES:    u64 = 0b0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const TREY_SPADES:    u64 = 0b0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const DEUCE_SPADES:   u64 = 0b0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const ACE_HEARTS:     u64 = 0b0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const KING_HEARTS:    u64 = 0b0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const QUEEN_HEARTS:   u64 = 0b0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const JACK_HEARTS:    u64 = 0b0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const TEN_HEARTS:     u64 = 0b0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const NINE_HEARTS:    u64 = 0b0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const EIGHT_HEARTS:   u64 = 0b0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000_0000;
    pub const SEVEN_HEARTS:   u64 = 0b0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000_0000;
    pub const SIX_HEARTS:     u64 = 0b0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000_0000;
    pub const FIVE_HEARTS:    u64 = 0b0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000_0000;
    pub const FOUR_HEARTS:    u64 = 0b0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000_0000;
    pub const TREY_HEARTS:    u64 = 0b0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000_0000;
    pub const DEUCE_HEARTS:   u64 = 0b0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000_0000;
    pub const ACE_DIAMONDS:   u64 = 0b0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000_0000;
    pub const KING_DIAMONDS:  u64 = 0b0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000_0000;
    pub const QUEEN_DIAMONDS: u64 = 0b0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000_0000;
    pub const JACK_DIAMONDS:  u64 = 0b0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000_0000;
    pub const TEN_DIAMONDS:   u64 = 0b0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000_0000;
    pub const NINE_DIAMONDS:  u64 = 0b0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000_0000;
    pub const EIGHT_DIAMONDS: u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000_0000;
    pub const SEVEN_DIAMONDS: u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000_0000;
    pub const SIX_DIAMONDS:   u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000_0000;
    pub const FIVE_DIAMONDS:  u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000_0000;
    pub const FOUR_DIAMONDS:  u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000_0000;
    pub const TREY_DIAMONDS:  u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000_0000;
    pub const DEUCE_DIAMONDS: u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000_0000;
    pub const ACE_CLUBS:      u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000_0000;
    pub const KING_CLUBS:     u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000_0000;
    pub const QUEEN_CLUBS:    u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000_0000;
    pub const JACK_CLUBS:     u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000_0000;
    pub const TEN_CLUBS:      u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000_0000;
    pub const NINE_CLUBS:     u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000_0000;
    pub const EIGHT_CLUBS:    u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100_0000;
    pub const SEVEN_CLUBS:    u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010_0000;
    pub const SIX_CLUBS:      u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001_0000;
    pub const FIVE_CLUBS:     u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_1000;
    pub const FOUR_CLUBS:     u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0100;
    pub const TREY_CLUBS:     u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0010;
    pub const DEUCE_CLUBS:    u64 = 0b0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0000_0001;
    pub const BLANK:          u64 = 0;

    //endregion

    pub const ACES: u64 = BitCard::ACE_SPADES | BitCard::ACE_HEARTS | BitCard::ACE_DIAMONDS | BitCard::ACE_CLUBS;
    pub const KINGS: u64 = BitCard::KING_SPADES | BitCard::KING_HEARTS | BitCard::KING_DIAMONDS | BitCard::KING_CLUBS;

}

#[cfg(test)]
#[allow(non_snake_case)]
mod alt__bit_card {
    use super::*;

    #[test]
    fn aces() {
        assert_eq!(BitCard::ACE_SPADES, BitCard::ACE_SPADES & BitCard::ACES);
        assert_eq!(BitCard::ACE_HEARTS, BitCard::ACE_HEARTS & BitCard::ACES);
        assert_eq!(BitCard::ACE_DIAMONDS, BitCard::ACE_DIAMONDS & BitCard::ACES);
        assert_eq!(BitCard::ACE_CLUBS, BitCard::ACE_CLUBS & BitCard::ACES);
        assert_eq!(BitCard::BLANK, BitCard::KING_DIAMONDS & BitCard::ACES);
    }
}